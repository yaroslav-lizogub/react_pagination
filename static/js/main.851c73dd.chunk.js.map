{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","pages","Math","ceil","isDisabled","direction","length","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","setCurrentPage","setPerPage","last","first","currentPageItems","slice","id","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAAwB,SAACC,GACpC,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAQZ,EAAW,EAAGa,KAAKC,KAAKN,EAAQC,IAExCM,EAAa,SAACC,GAClB,MAAkB,SAAdA,GAAwC,IAAhBN,GAIV,SAAdM,GAAwBN,IAAgBE,EAAMK,QAOpD,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUL,EAAW,UAH3B,SAME,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EAAW,QAC1BO,QAAS,WACa,IAAhBZ,GACFC,EAAaD,EAAc,IAPjC,oBAcDE,EAAMW,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASd,IAJvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,KACLC,QAAS,WACHE,IAASd,GACXC,EAAaa,IANnB,SAUGA,KAhBEA,MAoBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUL,EAAW,UAH3B,SAME,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EAAW,QAC1BO,QAAS,WACHZ,IAAgBE,EAAMK,QACxBN,EAAaD,EAAc,IAPjC,wBC7EFgB,EAAQ1B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBmB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KAEMtB,EAAQkB,EAAMT,OAEhBc,EAAOrB,EAAcD,EACrBuB,EAAQD,EAAOtB,EAEfsB,EAAOvB,IACTuB,EAAOvB,EACPwB,GAAStB,EAAc,GAAKD,GAG9B,IASMwB,EAAmBP,EAAMQ,MAAMF,EAAOD,GAE5C,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EAAQ,EADzC,cACgDD,EADhD,eAC2DvB,EAD3D,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAO3B,EACP4B,SAtBkB,SAACC,GAC3BR,EAAWS,OAAOD,EAAME,OAAOJ,QAC/BP,EAAe,IAeT,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA5CmB,SAACa,GACxBK,EAAeL,MA8Cb,6BACGS,EAAiBV,KAAI,SAAAmB,GAAI,OACxB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.851c73dd.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n\n  const isDisabled = (direction: string) => {\n    if (direction === 'prev' && currentPage === 1) {\n      return true;\n    }\n\n    if (direction === 'next' && currentPage === pages.length) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: isDisabled('prev') },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isDisabled('prev')}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#2\"\n            onClick={() => {\n              if (page !== currentPage) {\n                onPageChange(page);\n              }\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: isDisabled('next') },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isDisabled('next')}\n          onClick={() => {\n            if (currentPage !== pages.length) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const total = items.length;\n\n  let last = currentPage * perPage;\n  let first = last - perPage;\n\n  if (last > total) {\n    last = total;\n    first = (currentPage - 1) * perPage;\n  }\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const currentPageItems = items.slice(first, last);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${first + 1} - ${last} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {currentPageItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}